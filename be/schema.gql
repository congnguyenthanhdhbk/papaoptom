# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CategoryChildrenRes {
  id: Int!
  name: String!
}

type CategoryRes {
  id: Int
  name: String
  child: CategoryChildrenRes
}

type SupplierRes {
  id: Int
  address: String
  phone: String
  email: String
  company: String
  exchangeRate: Int
}

type BrandRes {
  id: Int
  name: String
}

type GalleryRes {
  url: String
}

type CharacteristicRes {
  description: String
  photo1: String
  productMaterial: String
  sizeChart: String
  repeatedDimensions: String
  steamInBox: String
  liningMaterial: String
  outsoleMaterial: String
  country: String
  heelHeight: String
  platformHeight: String
  picturedSize: String
  purchasePrice: String
  sellingPrice: String
  season: String
  shootingDate: String
  purchaseCurrency: String
  saleCurrency: String
  floor: String
  type: String
  oldPurchasePrice: String
  oldSellingPrice: String
  insoleMaterial: String
  videoReview: String
  totalOldPurchasePrice: String
  totalOldSellingPrice: String
  totalPurchasePrice: String
  totalSellingPrice: String
  discountInPercent: String
  gallery: [GalleryRes!]
}

type ProductFilterRes {
  id: String
  vcode: String
  name: String
  quantity: Int
  category: CategoryRes
  supplier: SupplierRes
  brand: BrandRes
  createdAt: DateTime
  updatedAt: DateTime
  characteristics: CharacteristicRes
  slug: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductRes {
  code: Int!
  message: String!
  data: [ProductFilterRes!]
  totalDocs: Int
  hasPrevPage: Boolean
  hasNextPage: Boolean
  totalPages: Int
  prevPage: Int
  nextPage: Int
  pageNumber: Int
  pageSize: Int
}

type ProductDetailRes {
  code: Int
  message: String
  data: ProductFilterRes
}

type OrderRes {
  code: Int
  message: String
  success: Boolean
}

type Query {
  getProduct(slug: String!): ProductDetailRes!
  filterProduct(filter: ProductFilterReq!): ProductRes!
}

input ProductFilterReq {
  id: String
  supplier: String
  category: String
  brand: String
  name: String
  pageSize: Int
  pageNumber: Int
}

type Mutation {
  addOrder(product: [ProductReq!], shipping: [ShippingReq!], payment: PaymentReq, customer: CustomerReq): OrderRes!
}

input ProductReq {
  id: String
  vcode: String
  name: String
  quantity: Int
  category: CategoryReq
  supplier: SupplierReq
  brand: BrandReq
  createdAt: DateTime
  updatedAt: DateTime
  characteristics: CharacteristicsReq
}

input CategoryReq {
  id: Int
  name: String
  child: CategoryChildrenReq
}

input CategoryChildrenReq {
  id: Int!
  name: String!
}

input SupplierReq {
  id: Int
  address: String
  phone: String
  email: String
  company: String
  exchangeRate: Int
}

input BrandReq {
  id: Int
  name: String
}

input CharacteristicsReq {
  description: String
  photo1: String
  productMaterial: String
  sizeChart: String
  repeatedDimensions: String
  steamInBox: String
  liningMaterial: String
  outsoleMaterial: String
  country: String
  heelHeight: String
  platformHeight: String
  picturedSize: String
  purchasePrice: String
  sellingPrice: String
  season: String
  shootingDate: String
  purchaseCurrency: String
  saleCurrency: String
  floor: String
  type: String
  oldPurchasePrice: String
  oldSellingPrice: String
  insoleMaterial: String
  videoReview: String
  totalOldPurchasePrice: String
  totalOldSellingPrice: String
  totalPurchasePrice: String
  totalSellingPrice: String
  discountInPercent: String
  gallery: [GalleryReq!]
}

input GalleryReq {
  url: String
}

input ShippingReq {
  address: String
  phone: String
  name: String
}

input PaymentReq {
  cardNumber: String
  methods: String
  securityCode: String
}

input CustomerReq {
  fullName: String
  email: String
  phone: String
  address: String
}
